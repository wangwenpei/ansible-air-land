- name: Ensure data dir
  file:
    path: "{{ item }}"
    state: directory
  loop: "{{ air_land_dirs }}"

- name: Ensure parent dir
  file:
    path: "{{ air_land_config_root }}"
    state: directory

- name: Sync config files
  synchronize:
    src: "air-lands/{{ air_land_project }}/"
    dest: "{{ air_land_config_root }}/{{ air_land_project }}/"
  when: air_land_sync_files

- name: Create config directories
  file:
    path: "{{ air_land_config_root }}/{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  with_filetree: "{{ air_land_template_root }}/"
  when: air_land_project and item.state == 'directory'

- name: Render config files
  template:
    src: "{{ item.src }}"
    dest: "{{ air_land_config_root }}/{{ item.path }}"
  with_filetree: "{{ air_land_template_root }}/"
  when: air_land_project and item.state == 'file'

- name: Copy simple service
  copy:
      src: "{{ air_land_config_root }}/{{ item }}/{{ item }}.service"
      dest: "/etc/systemd/system/{{ item }}.service"
      remote_src: yes
  loop: "{{ air_land_active_services }}"
  when: ansible_distribution != 'MacOSX'

- name: Copy timer service
  copy:
      src: "{{ air_land_config_root }}/{{ item }}/{{ item }}.timer"
      dest: "/etc/systemd/system/{{ item }}.timer"
      remote_src: yes
  loop: "{{ air_land_active_timers }}"
  when: ansible_distribution != 'MacOSX'

- name: Enable simple service
  service:
      name: "{{ item }}"
      state: started
  loop: "{{ air_land_active_services }}"
  when: ansible_distribution != 'MacOSX'

- name: Enable timer service
  service:
      name: "{{ item }}.timer"
      state: started
  loop: "{{ air_land_active_timers }}"
  when: ansible_distribution != 'MacOSX'
